// proto/v1alpha1/kubelt.proto

syntax = "proto3";

package kubelt;
option go_package="github.com/proofzero/kubelt/proto/v1alpha1";

import "google/protobuf/any.proto";


// Fields
// ============================================================================

// A link
message Link {
  string source = 1;
  string target = 2;
  string kind = 3;
  int32 rank = 4;
  map<string, string> metadata = 5;
}

// A node 
message Node {
  string ID = 1;
  string apiVersion = 2;
  string kind = 3;
  map<string, string> metadata = 4;
  map<string, string> annotations = 5;
  repeated google.protobuf.Any data = 6; // represented as a cue.Value
  repeated Link previous = 7;
  repeated Link next = 8;
}

// A list of manifests
message Manifests {
  // label, query params
  map<string, Node> manifest = 1;
}

// A graph of kubelt nodes
message Graph {
  string graph = 1; // graph as string?
}

// A change command
message Command {
  enum  Operation {
    INSERT = 0;
    UPDATE = 1;
    REMOVE = 2;
    LINK = 4;
    UNLINK = 5;
  }
  
  Operation op = 1;
  string kind = 2;
  Node node = 3;
}

// A list of Commands
message Commands {
  repeated Command commands = 1;
}

// Requests
// ============================================================================

message Error {
  int32 code = 1;

  string message = 2;
}

// HealthCheck
message HealthCheckRequest {}
message HealthCheckResponse {
  Error error = 1;
}

// Apply
message ApplyRequest {
  Manifests manifests = 2;
}

message ApplyResponse {
  Graph graph = 1;

  Error error = 2;
}

// Commit
message CommitRequest {
  Commands commands = 1;
}

message CommitResponse {
  Error error = 1;
}

// Service
// ============================================================================
service Kubelt {
  rpc HealthCheck (HealthCheckRequest) returns (HealthCheckResponse);
  rpc Apply ( ApplyRequest ) returns ( ApplyResponse );
  rpc Commit ( CommitRequest ) returns ( CommitResponse );
}

